#!/usr/bin/env python

from __future__ import print_function

import os
import re
import sys

NAMES = {
    'Run16APVUL': 'Data 2016 APV',
    'UL16APV': 'Monte Carlo 2016 APV',
    'Run16UL': 'Data 2016',
    'UL16': 'Monte Carlo 2016',
    'RunUL17': 'Data 2017',
    'UL17': 'Monte Carlo 2017',
}

EOSPATH="/eos/vbc/experiments/cms/store/user/liko/StopsCompressed/nanoTuples"

def main():

    for name in sorted(NAMES.keys()):
        print("====> ", NAMES[name])
        filename = "nanoPostProcessing_%s.sh" % name
        with open(filename, 'r') as era:
            lines = era.read()

        for match in re.finditer("^\s*([^\#\s][^\#\n]*)(#SPLIT(\d+))?\s*$", lines, re.M):
            command = match.group(1).split()
            if match.group(3) is None:
                split = 1
            else:
                split = int(match.group(3))   
            sample = getarg(command, '--sample')
            era = getarg(command, '--processingEra')
            skim = getarg(command, '--skim')
            dir = os.path.join(EOSPATH, era, skim, sample)
            cnt = 0
            if split == 1:
                path = os.path.join(dir, '%s.root' % sample)
                if os.path.exists(path):
                    cnt += 1
            else:
                for i in range(split):
                    path = os.path.join(dir, '%s_%d.root' % (sample, i))
                    if os.path.exists(path):
                        cnt += 1
            print("   %-30s: %d/%d" % (sample, cnt, split))


def getarg(cmd_array, arg):

    try:
        idx = cmd_array.index(arg)
        return cmd_array[idx+1]
    except ValueError:
        print("Token %s is not in the list %s" % (arg, ' '.join(cmd_array)))
        sys.exit()

if __name__ == '__main__':

    main()
